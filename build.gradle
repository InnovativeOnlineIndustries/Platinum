import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask

plugins {
  id "fabric-loom" version "1.0-SNAPSHOT"
  id 'maven-publish'
  id 'org.cadixdev.licenser' version '0.6.1'
  id "com.matthewprenger.cursegradle" version "1.4.0"
  id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.71.9"
  id "io.github.juuxel.loom-quiltflower" version "1.+"
  id "org.quiltmc.quilt-mappings-on-loom" version "4.2.0"
}
apply plugin: 'eclipse'

version = "${minecraftVersion}-${project.api_version}"
if (System.getenv('BUILD_NUMBER') != null) {
  version += "-" + System.getenv('BUILD_NUMBER')
}
group = 'com.hrznstudio'
archivesBaseName = 'titanium'
def isReleaseBranch = System.getenv("GIT_BRANCH") == "1.19";

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

license {
  header = project.file('HEADER')
  ext {
    year = Calendar.getInstance().get(Calendar.YEAR)
    name = 'Horizon Studio'
    email = 'contact@hrznstudio.com'
    mod = 'Titanium'
  }
}

loom.accessWidenerPath = file("src/main/resources/titanium.accesswidener")

repositories {
  mavenCentral()
  maven {
    // location of the maven that hosts JEI files
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    // location of a maven mirror for JEI files, as a fallback
    name = "ModMaven"
    url = "https://modmaven.k-4u.nl"
  }
  maven {
    url "https://maven.tterrag.com/"
  }
  maven {
    url 'https://www.dogforce-games.com/maven/'
  }
  maven { url "https://maven.shedaniel.me/" }
  maven { url = 'https://ladysnake.jfrog.io/artifactory/mods' }
  maven { url = "https://mvn.devos.one/snapshots/" }
  maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
  maven { url = "https://jitpack.io" }
}

dependencies {
  minecraft "com.mojang:minecraft:${project.minecraftVersion}"
  mappings loom.officialMojangMappings()
  modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
  modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

  modImplementation(include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"))

  modApi "dev.architectury:architectury-fabric:$arch_version"
  modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"

  // compile against the JEI API but do not include it at runtime
  modCompileOnly("mezz.jei:jei-${project.minecraftVersion}-common-api:$jei_version")
  modCompileOnly("mezz.jei:jei-${project.minecraftVersion}-fabric-api:$jei_version")

  modImplementation(include("io.github.fabricators_of_create.Porting-Lib:Porting-Lib:${project.port_lib_version}+${project.minecraftVersion}"))
  modImplementation(include("net.minecraftforge:forgeconfigapiport-fabric:${project.config_api_version}"))

  include modApi('teamreborn:energy:2.2.0') {
    exclude(group: "net.fabricmc.fabric-api")
  }
}

processResources {
  inputs.property "version", project.version

  filesMatching("fabric.mod.json") {
    expand "version": project.version
  }

  exclude 'META-INF/mods.toml'
}

jar {
  manifest {
    attributes(["Specification-Title"     : project.name,
                "Specification-Vendor"    : "Horizon Studio",
                "Specification-Version"   : "2.0",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${project.api_version}",
                "Implementation-Vendor"   : "Horizon Studio",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Maven-Artifact"          : "${group}:${archivesBaseName}:${version}",
                "ModSide"                 : "BOTH",
                "Automatic-Module-Name"   : "com.hrznstdio.titanium"
    ],)

  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}


task deobfJar(type: Jar) {
  from sourceSets.main.output
  classifier 'remap'
}

artifacts {
  archives sourcesJar
  archives javadocJar
  archives deobfJar
}

publish.dependsOn(project.tasks.getByName("assemble"))
publish.mustRunAfter(project.tasks.getByName("build"))

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
  repositories {
    if (isReleaseBranch) {
      maven {
        url "file://" + System.getenv("local_maven")
      }
    } else {
      mavenLocal()
    }
  }
}

tasks.curseforge.enabled = System.env["CURSE_API"] != null

curseforge {
  if (System.env["CURSE_API"] != null) {
    apiKey = System.env["CURSE_API"]
  }
  project {
    id = '287342'
    changelog = "https://github.com/InnovativeOnlineIndustries/Titanium/blob/changelog/CHANGELOG.md"
    changelogType = 'markdown'
    releaseType = 'beta'
    addGameVersion '1.19.1'
    mainArtifact(jar) {

    }
    addArtifact sourcesJar
    addArtifact deobfJar
    addArtifact javadocJar
  }
}

task makeChangelog(type: GitChangelogTask) {
  //fromRepo = file("../../home/runner/work/Titanium/Titanium")
  file = new File("CHANGELOG.md")
  untaggedName = "Version ${project.version}"
  fromCommit = "6a5a3df3665643ea181873312e3801db7c662686"
  fromRef = "refs/tags/2.4.0"
  toRef = "1.19"
  templateContent = file("changelog.mustache").getText("UTF-8")
}
